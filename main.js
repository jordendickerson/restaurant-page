(()=>{"use strict";var e={478:(e,n,t)=>{t.d(n,{Z:()=>u});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),A=t(349),s=t(667),p=t.n(s),c=new URL(t(202),t.b),d=i()(o());d.i(A.Z);var l=p()(c);d.push([e.id,".home{position:relative}.home .background-wrapper{background-image:url("+l+');height:80vh;object-fit:cover;background-size:100%;background-position:center;box-shadow:inset 0px 8px 32px -2px rgba(0,0,0,.8);display:flex;justify-content:center;align-items:center;filter:brightness(90%)}.home .home-panel{position:absolute;width:560px;top:40%;left:calc(50% - 280px);background-color:#0091ff;padding:25px;border-radius:10px;color:#f5f5f5;text-align:center;box-shadow:0px 14px 0px 0px #185c8a,0px 24px 19px 2px rgba(0,0,0,.91)}.home .home-panel .panel-heading{font-size:3em;font-weight:700}.home .home-panel .panel-subtitle{font-size:1.5em;font-weight:100}.menu{display:flex;flex-direction:column;justify-content:center;padding:25px}.menu .menu-label-wrapper{display:flex;justify-content:center}.menu .menu-label-wrapper .menu-label{text-align:center;font-size:5em;font-weight:800;margin-top:50px;padding:10px;background-color:#0091ff;color:#f5f5f5;box-shadow:0px 14px 0px 0px #185c8a;width:400px;border-radius:20px}.menu .menu-items{display:grid;grid-template-columns:repeat(auto-fill, minmax(400px, 1fr));grid-gap:30px;margin-top:35px}.menu-item{display:grid;grid-template-columns:1fr 2fr;grid-gap:35px;padding:10px;border-radius:10px;box-shadow:0px 20px 27px 0px rgba(0,0,0,.81);background-color:#f5f5f5;border:5px solid #000}.menu-item .left-side img{width:200px;height:200px;object-fit:cover;border-radius:10px;box-shadow:0px 0px 0px 5px #0091ff}.menu-item .right-side{display:grid;align-items:center}.menu-item .right-side .menu-item-title{font-size:2em;font-weight:700}.menu-item .right-side .menu-item-description{font-size:1.2em}body{margin:0px;padding:0px;font-family:"Segoe UI",Tahoma,Geneva,Verdana,sans-serif}',"",{version:3,sources:["webpack://./src/styles/main.scss","webpack://./src/styles/home.scss","webpack://./src/styles/menu.scss","webpack://./src/styles/menu-item.scss"],names:[],mappings:"AAAQ,MCCJ,iBAAA,CAEA,0BACI,wDAAA,CACA,WAAA,CACA,gBAAA,CACA,oBAAA,CACA,0BAAA,CACA,iDAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,sBAAA,CAIJ,kBACI,iBAAA,CACA,WAAA,CACA,OAAA,CACA,sBAAA,CACA,wBAAA,CACA,YAAA,CACA,kBAAA,CACA,aAAA,CACA,iBAAA,CACA,qEAAA,CAEA,iCACI,aAAA,CACA,eAAA,CAEJ,kCACI,eAAA,CACA,eAAA,CCnCZ,MACI,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,YAAA,CAEA,0BACI,YAAA,CACA,sBAAA,CACA,sCACI,iBAAA,CACA,aAAA,CACA,eAAA,CACA,eAAA,CACA,YAAA,CACA,wBAAA,CACA,aAAA,CACA,mCAAA,CACA,WAAA,CACA,kBAAA,CAKR,kBACI,YAAA,CACA,2DAAA,CACA,aAAA,CACA,eAAA,CC5BR,WACI,YAAA,CACA,6BAAA,CACA,aAAA,CACA,YAAA,CACA,kBAAA,CACA,4CAAA,CACA,wBAAA,CACA,qBAAA,CAEI,0BACI,WAAA,CACA,YAAA,CACA,gBAAA,CACA,kBAAA,CACA,kCAAA,CAGR,uBACI,YAAA,CACA,kBAAA,CACA,wCACI,aAAA,CACA,eAAA,CAEJ,8CACI,eAAA,CHrBZ,KACI,UAAA,CACA,WAAA,CACA,uDAAA",sourcesContent:["@import url('./nav-bar.scss');\n@import './home.scss';\n@import './menu.scss';\n@import './menu-item.scss';\n\nbody{\n    margin: 0px;\n    padding: 0px;\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n}",".home{\n    position: relative;\n\n    .background-wrapper{\n        background-image: url('../food.gif');\n        height: 80vh;\n        object-fit: cover;\n        background-size: 100%;\n        background-position: center;\n        box-shadow: inset 0px 8px 32px -2px rgba(0,0,0,0.8);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        filter: brightness(90%);\n\n        \n    }\n    .home-panel{\n        position: absolute;\n        width: 560px;\n        top: 40%;\n        left: calc(50% - 280px);\n        background-color: #0091ff;\n        padding: 25px;\n        border-radius: 10px;\n        color: whitesmoke;\n        text-align: center;\n        box-shadow: 0px 14px 0px 0px rgb(24, 92, 138), 0px 24px 19px 2px rgba(0,0,0,0.91);\n\n        .panel-heading{\n            font-size: 3em;\n            font-weight: 700;\n        }\n        .panel-subtitle{\n            font-size: 1.5em;\n            font-weight: 100;\n        }\n    }\n}\n\n\n",".menu{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding: 25px;\n\n    .menu-label-wrapper{\n        display: flex;\n        justify-content: center;\n        .menu-label{\n            text-align: center;\n            font-size: 5em;\n            font-weight: 800;\n            margin-top: 50px;\n            padding: 10px;\n            background-color: #0091ff;\n            color: whitesmoke;\n            box-shadow: 0px 14px 0px 0px rgb(24, 92, 138);\n            width: 400px;\n            border-radius: 20px;\n        }\n    }\n    \n\n    .menu-items{\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n        grid-gap: 30px;\n        margin-top: 35px;\n    }\n}",".menu-item{\n    display: grid;\n    grid-template-columns: 1fr 2fr;\n    grid-gap: 35px;\n    padding: 10px;\n    border-radius: 10px;\n    box-shadow: 0px 20px 27px 0px rgba(0,0,0,0.81);\n    background-color: whitesmoke;\n    border: 5px solid black;\n    .left-side{\n        img{\n            width: 200px;\n            height: 200px;\n            object-fit: cover;\n            border-radius: 10px;\n            box-shadow: 0px 0px 0px 5px #0091FF;\n        }\n    }\n    .right-side{\n        display: grid;\n        align-items: center;\n        .menu-item-title{\n            font-size: 2em;\n            font-weight: 700;\n        }\n        .menu-item-description{\n            font-size: 1.2em;\n\n        }\n    }\n}"],sourceRoot:""}]);const u=d},349:(e,n,t)=>{t.d(n,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([e.id,".nav-wrapper{\n    display: flex;\n    width: 100vw;\n    height: 20vh;\n    justify-content: space-evenly;\n    align-content: center;\n    box-shadow: 0px 2px 32px -2px rgba(0,0,0,0.8);\n    background-color: white;\n}\n\n.nav-wrapper > .logo{\n    width: 20%;\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    cursor: pointer;\n}\n\n.nav-wrapper > .nav-button-wrapper {\n    display: flex;\n    align-items: center;\n}\n\n.nav-wrapper > .nav-button-wrapper >.nav-button{\n    font-size: 2em;\n    font-weight: 600;\n    border-bottom: 2px solid transparent;\n    cursor: pointer;\n    transition: 0.3s ease-in-out;\n}\n\n.nav-wrapper > .nav-button-wrapper > .nav-button:hover{\n    border-bottom: 2px solid black;\n}","",{version:3,sources:["webpack://./src/styles/nav-bar.scss"],names:[],mappings:"AAAA;IACI,aAAa;IACb,YAAY;IACZ,YAAY;IACZ,6BAA6B;IAC7B,qBAAqB;IACrB,6CAA6C;IAC7C,uBAAuB;AAC3B;;AAEA;IACI,UAAU;IACV,4DAA4D;IAC5D,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,cAAc;IACd,gBAAgB;IAChB,oCAAoC;IACpC,eAAe;IACf,4BAA4B;AAChC;;AAEA;IACI,8BAA8B;AAClC",sourcesContent:[".nav-wrapper{\n    display: flex;\n    width: 100vw;\n    height: 20vh;\n    justify-content: space-evenly;\n    align-content: center;\n    box-shadow: 0px 2px 32px -2px rgba(0,0,0,0.8);\n    background-color: white;\n}\n\n.nav-wrapper > .logo{\n    width: 20%;\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    cursor: pointer;\n}\n\n.nav-wrapper > .nav-button-wrapper {\n    display: flex;\n    align-items: center;\n}\n\n.nav-wrapper > .nav-button-wrapper >.nav-button{\n    font-size: 2em;\n    font-weight: 600;\n    border-bottom: 2px solid transparent;\n    cursor: pointer;\n    transition: 0.3s ease-in-out;\n}\n\n.nav-wrapper > .nav-button-wrapper > .nav-button:hover{\n    border-bottom: 2px solid black;\n}"],sourceRoot:""}]);const A=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var p=0;p<e.length;p++){var c=[].concat(e[p]);r&&i[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),n.push(c))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([a]).join("\n")}return[n].join("\n")}},971:(e,n,t)=>{t.r(n),t.d(n,{default:()=>g});var r=t(379),o=t.n(r),a=t(795),i=t.n(a),A=t(569),s=t.n(A),p=t(565),c=t.n(p),d=t(216),l=t.n(d),u=t(589),m=t.n(u),C=t(478),f={};f.styleTagTransform=m(),f.setAttributes=c(),f.insert=s().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=l(),o()(C.Z,f);const g=C.Z&&C.Z.locals?C.Z.locals:void 0},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},i=[],A=0;A<e.length;A++){var s=e[A],p=r.base?s[0]+r.base:s[0],c=a[p]||0,d="".concat(p," ").concat(c);a[p]=c+1;var l=t(d),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==l)n[l].references++,n[l].updater(u);else{var m=o(u,r);r.byIndex=A,n.splice(A,0,{identifier:d,updater:m,references:1})}i.push(d)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var A=t(a[i]);n[A].references--}for(var s=r(e,o),p=0;p<a.length;p++){var c=t(a[p]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}a=s}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},202:(e,n,t)=>{e.exports=t.p+"19ed51e35ce845fa40ed.gif"}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{const e=(e,n,t)=>{const r=document.createElement("div");r.classList.add("menu-item");const o=document.createElement("div");o.classList.add("left-side");const a=document.createElement("div");a.classList.add("right-side"),r.appendChild(o),r.appendChild(a);const i=document.createElement("img");i.src=e,o.appendChild(i);const A=document.createElement("div");A.classList.add("menu-item-title"),A.textContent=n,a.appendChild(A);const s=document.createElement("div");return s.classList.add("menu-item-description"),s.textContent=t,a.appendChild(s),r},n=t.p+"8270ef34cb2e4165fc3b.jpg";t(971),document.getElementById("content").appendChild(function(){const t=document.createElement("div");t.classList.add("app");const r=document.createElement("div");return r.classList.add("app-content"),t.appendChild((()=>{const e=document.createElement("div");e.classList.add("nav-wrapper");const n=document.createElement("img");n.setAttribute("src","../src/microfood.svg"),n.classList.add("logo");const t=document.createElement("div");t.classList.add("nav-button-wrapper");const r=document.createElement("div");r.classList.add("nav-button-wrapper");const o=document.createElement("div");o.classList.add("nav-button"),o.innerText="Menu";const a=document.createElement("div");return a.classList.add("nav-button"),a.innerText="About",e.appendChild(n),e.appendChild(t),e.appendChild(r),t.appendChild(o),r.appendChild(a),e})()),t.appendChild(r),r.appendChild((()=>{const t=document.createElement("div");t.classList.add("menu");const r=document.createElement("div");r.classList.add("menu-label-wrapper"),t.appendChild(r);const o=document.createElement("div");o.classList.add("menu-label"),o.textContent="Menu",r.appendChild(o);const a=document.createElement("div");a.classList.add("menu-items"),t.appendChild(a);for(let t=0;t<10;t++){const t=e(n,"Really Small Burger","You can't tell, but this burger is really small");a.appendChild(t)}return t})()),t}())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,